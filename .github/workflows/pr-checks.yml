name: PR Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  pr-checks:
    name: Pull Request Checks
    runs-on: macos-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.4.app/Contents/Developer

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/Library/Caches/org.swift.swiftpm
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-pr-${{ hashFiles('**/Package.resolved', '**/*.xcodeproj/project.pbxproj') }}
          restore-keys: |
            ${{ runner.os }}-pr-

      - name: Resolve dependencies
        run: |
          echo "üîç Resolving Swift Package dependencies..."
          xcodebuild -resolvePackageDependencies -project Argus.xcodeproj

      - name: Build for testing
        run: |
          echo "üî® Building project for testing..."
          xcodebuild \
            -project Argus.xcodeproj \
            -scheme Argus \
            -destination 'platform=iOS Simulator,OS=latest' \
            -configuration Debug \
            build-for-testing \
            | xcpretty --color --simple

      - name: Run unit tests
        run: |
          echo "üß™ Running unit tests..."
          xcodebuild \
            -project Argus.xcodeproj \
            -scheme Argus \
            -destination 'platform=iOS Simulator,OS=latest' \
            -configuration Debug \
            test-without-building \
            -skip-testing:ArgusUITests \
            | xcpretty --color --test --simple

      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå Unit tests failed. Please check the workflow logs and fix any failing tests before merging.'
            })

      - name: Comment success on PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ All unit tests passed! This PR is ready for review.'
            })
